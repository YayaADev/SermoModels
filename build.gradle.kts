plugins {
    kotlin("jvm") version "1.9.21"
    kotlin("plugin.serialization") version "1.9.21"
    id("org.openapi.generator") version "7.2.0"
    `maven-publish`
}

group = "com.sermo"
version = "1.0.0"

repositories {
    mavenCentral()
}

dependencies {
    // JSON serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2")
}

kotlin {
    jvmToolchain(21)
}

// Kotlin generation
openApiGenerate {
    generatorName.set("kotlin")
    inputSpec.set("$projectDir/src/main/resources/openapi/sermo-api.json")
    outputDir.set("${layout.buildDirectory.get()}/generated/openapi")
    packageName.set("com.sermo.models")
    modelPackage.set("com.sermo.models")
    apiPackage.set("com.sermo.models")

    configOptions.set(mapOf(
        "serializationLibrary" to "kotlinx_serialization",
        "library" to "jvm-ktor",
        "useCoroutines" to "true"
    ))

    // Only generate models, not client code
    globalProperties.set(mapOf(
        "models" to "",
        "apis" to "false",
        "supportingFiles" to "false"
    ))
}

// TypeScript generation for npm package
val generateTypeScript by tasks.registering(org.openapitools.generator.gradle.plugin.tasks.GenerateTask::class) {
    generatorName.set("typescript-fetch")
    inputSpec.set("$projectDir/src/main/resources/openapi/sermo-api.json")
    outputDir.set("${layout.buildDirectory.get()}/generated/typescript")
    packageName.set("sermo-models")
    
    configOptions.set(mapOf(
        "npmName" to "sermo-models",
        "npmVersion" to project.version.toString(),
        "typescriptThreePlus" to "true",
        "supportsES6" to "true",
        "enumPropertyNaming" to "PascalCase"
    ))

    // Only generate models, not API client
    globalProperties.set(mapOf(
        "models" to "",
        "apis" to "false",
        "supportingFiles" to "runtime.ts",
        "modelTests" to "false",
        "modelDocs" to "false"
    ))
}

// Create index.ts file that exports all models
val createIndexFile by tasks.registering {
    dependsOn(generateTypeScript)
    doLast {
        val indexFile = file("${layout.buildDirectory.get()}/generated/typescript/src/index.ts")
        indexFile.writeText("""
// Auto-generated index file for Sermo API models
// Do not edit this file manually

export * from './models/ApiError';
export * from './models/ErrorResponse';
export * from './models/SynthesisRequest';
export * from './models/SynthesisResponse';
export * from './models/TranscriptionRequest';
export * from './models/TranscriptionResponse';
        """.trimIndent())
    }
}

// Add generated sources to compilation
sourceSets {
    main {
        kotlin {
            srcDir("${layout.buildDirectory.get()}/generated/openapi/src/main/kotlin")
        }
    }
}

// Ensure OpenAPI generation happens before compilation
tasks.compileKotlin {
    dependsOn("openApiGenerate")
}

publishing {
    publications {
        create<MavenPublication>("maven") {
            from(components["java"])
        }
    }
}
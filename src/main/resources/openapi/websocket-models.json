{
  "openapi": "3.0.3",
  "info": {
    "title": "Sermo WebSocket API Models",
    "version": "1.0.0",
    "description": "Data models for WebSocket-based speech practice API"
  },
  "paths": {},
  "components": {
    "schemas": {
      "AudioChunkMessage": {
        "type": "object",
        "required": ["type", "audio_data", "session_id"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["audio_chunk"],
            "description": "Message type identifier"
          },
          "audio_data": {
            "type": "string",
            "format": "byte",
            "description": "Base64-encoded audio data chunk"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier"
          },
          "sequence_number": {
            "type": "integer",
            "minimum": 0,
            "description": "Sequence number for chunk ordering"
          },
          "is_final": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this is the final audio chunk"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudioMetadata"
          }
        }
      },
      "PartialTranscriptionMessage": {
        "type": "object",
        "required": ["type", "text", "session_id"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["partial_transcription"],
            "description": "Message type identifier"
          },
          "text": {
            "type": "string",
            "description": "Partial transcription text"
          },
          "confidence": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "description": "Transcription confidence score"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier"
          },
          "is_final": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this is the final transcription"
          }
        }
      },
      "ConversationResponseMessage": {
        "type": "object",
        "required": ["type", "transcription", "ai_response", "session_id"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["conversation_response"],
            "description": "Message type identifier"
          },
          "transcription": {
            "type": "string",
            "description": "Final transcription of user's speech"
          },
          "corrections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Correction"
            },
            "description": "Grammar and pronunciation corrections"
          },
          "ai_response": {
            "type": "string",
            "description": "AI-generated conversation response"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier"
          },
          "language": {
            "type": "string",
            "description": "Detected or specified language code (e.g., 'ar-EG')"
          },
          "conversation_context": {
            "$ref": "#/components/schemas/ConversationContext"
          }
        }
      },
      "AudioResponseMessage": {
        "type": "object",
        "required": ["type", "audio_data", "session_id"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["audio_response"],
            "description": "Message type identifier"
          },
          "audio_data": {
            "type": "string",
            "format": "byte",
            "description": "Base64-encoded audio chunk data"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier"
          },
          "sequence_number": {
            "type": "integer",
            "minimum": 0,
            "description": "Sequence number for chunk ordering"
          },
          "is_final": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this is the final audio chunk"
          },
          "total_chunks": {
            "type": "integer",
            "minimum": 1,
            "description": "Total number of chunks in this audio response"
          },
          "audio_format": {
            "type": "string",
            "enum": ["mp3", "wav", "ogg"],
            "default": "mp3",
            "description": "Audio format of the chunk"
          }
        }
      },
      "SessionStartMessage": {
        "type": "object",
        "required": ["type", "language"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["session_start"],
            "description": "Message type identifier"
          },
          "language": {
            "type": "string",
            "description": "Target language code (e.g., 'ar-EG' for Egyptian Arabic)"
          },
          "user_level": {
            "type": "string",
            "enum": ["beginner", "intermediate", "advanced"],
            "description": "User's proficiency level in the target language"
          },
          "practice_mode": {
            "type": "string",
            "enum": ["conversation", "pronunciation", "grammar"],
            "default": "conversation",
            "description": "Type of practice session"
          },
          "audio_config": {
            "$ref": "#/components/schemas/AudioConfig"
          }
        }
      },
      "SessionEndMessage": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["session_end"],
            "description": "Message type identifier"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier"
          },
          "reason": {
            "type": "string",
            "enum": ["user_requested", "timeout", "error"],
            "description": "Reason for session termination"
          }
        }
      },
      "WebSocketErrorMessage": {
        "type": "object",
        "required": ["type", "error"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["error"],
            "description": "Message type identifier"
          },
          "error": {
            "$ref": "#/components/schemas/WebSocketApiError"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier, if applicable"
          },
          "retry_after": {
            "type": "integer",
            "minimum": 0,
            "description": "Suggested retry delay in seconds"
          }
        }
      },
      "Correction": {
        "type": "object",
        "required": ["original", "corrected", "type"],
        "properties": {
          "original": {
            "type": "string",
            "description": "Original text that needs correction"
          },
          "corrected": {
            "type": "string",
            "description": "Corrected version of the text"
          },
          "explanation": {
            "type": "string",
            "description": "Explanation of the correction"
          },
          "type": {
            "type": "string",
            "enum": ["grammar", "pronunciation", "vocabulary", "cultural"],
            "description": "Type of correction"
          },
          "severity": {
            "type": "string",
            "enum": ["minor", "major", "critical"],
            "default": "minor",
            "description": "Severity level of the error"
          }
        }
      },
      "ConversationContext": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "description": "Current conversation topic"
          },
          "turn_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of turns in this conversation"
          },
          "difficulty_level": {
            "type": "string",
            "enum": ["beginner", "intermediate", "advanced"],
            "description": "Current difficulty level"
          }
        }
      },
      "AudioMetadata": {
        "type": "object",
        "properties": {
          "sample_rate": {
            "type": "integer",
            "minimum": 8000,
            "maximum": 48000,
            "description": "Audio sample rate in Hz"
          },
          "encoding": {
            "type": "string",
            "enum": ["LINEAR16", "FLAC", "MULAW", "AMR", "AMR_WB", "OGG_OPUS", "SPEEX_WITH_HEADER_BYTE"],
            "description": "Audio encoding format"
          },
          "channels": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2,
            "default": 1,
            "description": "Number of audio channels"
          }
        }
      },
      "AudioConfig": {
        "type": "object",
        "properties": {
          "sample_rate": {
            "type": "integer",
            "minimum": 8000,
            "maximum": 48000,
            "default": 16000,
            "description": "Audio sample rate in Hz"
          },
          "encoding": {
            "type": "string",
            "enum": ["LINEAR16", "FLAC", "MULAW", "AMR", "AMR_WB", "OGG_OPUS", "SPEEX_WITH_HEADER_BYTE"],
            "default": "LINEAR16",
            "description": "Audio encoding format"
          },
          "channels": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2,
            "default": 1,
            "description": "Number of audio channels"
          },
          "language_hints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Language detection hints for speech recognition"
          }
        }
      },
      "WebSocketApiError": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code identifier"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "details": {
            "type": "string",
            "description": "Additional error details as JSON string"
          }
        }
      },
      "SessionStartedResponse": {
        "type": "object",
        "required": ["type", "session_id", "language", "practice_mode", "message"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["session_started"],
            "description": "Message type identifier"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Generated practice session identifier"
          },
          "language": {
            "type": "string",
            "description": "Confirmed target language code"
          },
          "practice_mode": {
            "type": "string",
            "enum": ["conversation", "pronunciation", "grammar"],
            "description": "Confirmed practice mode"
          },
          "message": {
            "type": "string",
            "description": "Welcome message for the user"
          }
        }
      },
      "SessionEndedResponse": {
        "type": "object",
        "required": ["type", "message"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["session_ended"],
            "description": "Message type identifier"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Practice session identifier that was ended"
          },
          "message": {
            "type": "string",
            "description": "Confirmation message for session termination"
          }
        }
      },
      "PracticeSession": {
        "type": "object",
        "required": ["session_id", "language", "practice_mode", "created_at", "last_activity_at"],
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique session identifier"
          },
          "language": {
            "type": "string",
            "description": "Target language code (e.g., 'ar-EG')"
          },
          "user_level": {
            "type": "string",
            "enum": ["beginner", "intermediate", "advanced"],
            "description": "User's proficiency level in the target language"
          },
          "practice_mode": {
            "type": "string",
            "enum": ["conversation", "pronunciation", "grammar"],
            "description": "Type of practice session"
          },
          "audio_config": {
            "$ref": "#/components/schemas/AudioConfig"
          },
          "conversation_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationTurn"
            },
            "description": "List of conversation turns in this session"
          },
          "created_at": {
            "type": "integer",
            "format": "int64",
            "description": "Session creation timestamp (milliseconds since epoch)"
          },
          "last_activity_at": {
            "type": "integer",
            "format": "int64",
            "description": "Last activity timestamp (milliseconds since epoch)"
          }
        }
      },
      "ConversationTurn": {
        "type": "object",
        "required": ["user_message", "assistant_reply"],
        "properties": {
          "user_message": {
            "type": "string",
            "description": "User's spoken message (transcribed)"
          },
          "assistant_reply": {
            "type": "string",
            "description": "AI assistant's response"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Turn timestamp (milliseconds since epoch)"
          }
        }
      }
    }
  }
}